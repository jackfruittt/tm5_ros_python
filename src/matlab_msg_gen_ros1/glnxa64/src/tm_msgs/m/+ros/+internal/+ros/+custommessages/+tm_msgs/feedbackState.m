function [data, info] = feedbackState
%FeedbackState gives an empty data for tm_msgs/FeedbackState
% Copyright 2019-2020 The MathWorks, Inc.
%#codegen
data = struct();
data.MessageType = 'tm_msgs/FeedbackState';
[data.Header, info.Header] = ros.internal.ros.messages.std_msgs.header;
info.Header.MLdataType = 'struct';
[data.IsSvrConnected, info.IsSvrConnected] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.IsSctConnected, info.IsSctConnected] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.TmsrvCperr, info.TmsrvCperr] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.TmscriptCperr, info.TmscriptCperr] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.TmsrvDataerr, info.TmsrvDataerr] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.TmscriptDataerr, info.TmscriptDataerr] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.MaxNotConnectInS, info.MaxNotConnectInS] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.DisconnectionTimes, info.DisconnectionTimes] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.JointPos, info.JointPos] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.JointVel, info.JointVel] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.JointTor, info.JointTor] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.Tool0Pose, info.Tool0Pose] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.ToolPose, info.ToolPose] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.TcpSpeed, info.TcpSpeed] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.TcpForce, info.TcpForce] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.JointTorAverage, info.JointTorAverage] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.JointTorMin, info.JointTorMin] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.JointTorMax, info.JointTorMax] = ros.internal.ros.messages.ros.default_type('double',NaN);
[data.RobotLink, info.RobotLink] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.IsDataTableCorrect, info.IsDataTableCorrect] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.RobotError, info.RobotError] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.ProjectRun, info.ProjectRun] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.ProjectPause, info.ProjectPause] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.SafetyguardA, info.SafetyguardA] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.EStop, info.EStop] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.CameraLight, info.CameraLight] = ros.internal.ros.messages.ros.default_type('logical',1);
[data.ErrorCode, info.ErrorCode] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.ProjectSpeed, info.ProjectSpeed] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.MaMode, info.MaMode] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.RobotLight, info.RobotLight] = ros.internal.ros.messages.ros.default_type('int32',1);
[data.CbDigitalOutput, info.CbDigitalOutput] = ros.internal.ros.messages.ros.default_type('logical',NaN);
[data.CbDigitalInput, info.CbDigitalInput] = ros.internal.ros.messages.ros.default_type('logical',NaN);
[data.CbAnalogOutput, info.CbAnalogOutput] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.CbAnalogInput, info.CbAnalogInput] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.EeDigitalOutput, info.EeDigitalOutput] = ros.internal.ros.messages.ros.default_type('logical',NaN);
[data.EeDigitalInput, info.EeDigitalInput] = ros.internal.ros.messages.ros.default_type('logical',NaN);
[data.EeAnalogOutput, info.EeAnalogOutput] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.EeAnalogInput, info.EeAnalogInput] = ros.internal.ros.messages.ros.default_type('single',NaN);
[data.ErrorContent, info.ErrorContent] = ros.internal.ros.messages.ros.char('string',0);
info.MessageType = 'tm_msgs/FeedbackState';
info.constant = 0;
info.default = 0;
info.maxstrlen = NaN;
info.MaxLen = 1;
info.MinLen = 1;
info.MatPath = cell(1,45);
info.MatPath{1} = 'header';
info.MatPath{2} = 'header.seq';
info.MatPath{3} = 'header.stamp';
info.MatPath{4} = 'header.stamp.sec';
info.MatPath{5} = 'header.stamp.nsec';
info.MatPath{6} = 'header.frame_id';
info.MatPath{7} = 'is_svr_connected';
info.MatPath{8} = 'is_sct_connected';
info.MatPath{9} = 'tmsrv_cperr';
info.MatPath{10} = 'tmscript_cperr';
info.MatPath{11} = 'tmsrv_dataerr';
info.MatPath{12} = 'tmscript_dataerr';
info.MatPath{13} = 'max_not_connect_in_s';
info.MatPath{14} = 'disconnection_times';
info.MatPath{15} = 'joint_pos';
info.MatPath{16} = 'joint_vel';
info.MatPath{17} = 'joint_tor';
info.MatPath{18} = 'tool0_pose';
info.MatPath{19} = 'tool_pose';
info.MatPath{20} = 'tcp_speed';
info.MatPath{21} = 'tcp_force';
info.MatPath{22} = 'joint_tor_average';
info.MatPath{23} = 'joint_tor_min';
info.MatPath{24} = 'joint_tor_max';
info.MatPath{25} = 'robot_link';
info.MatPath{26} = 'is_data_table_correct';
info.MatPath{27} = 'robot_error';
info.MatPath{28} = 'project_run';
info.MatPath{29} = 'project_pause';
info.MatPath{30} = 'safetyguard_a';
info.MatPath{31} = 'e_stop';
info.MatPath{32} = 'camera_light';
info.MatPath{33} = 'error_code';
info.MatPath{34} = 'project_speed';
info.MatPath{35} = 'ma_mode';
info.MatPath{36} = 'robot_light';
info.MatPath{37} = 'cb_digital_output';
info.MatPath{38} = 'cb_digital_input';
info.MatPath{39} = 'cb_analog_output';
info.MatPath{40} = 'cb_analog_input';
info.MatPath{41} = 'ee_digital_output';
info.MatPath{42} = 'ee_digital_input';
info.MatPath{43} = 'ee_analog_output';
info.MatPath{44} = 'ee_analog_input';
info.MatPath{45} = 'error_content';
