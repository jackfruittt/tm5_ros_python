
classdef SvrResponse < ros.Message
    %SvrResponse MATLAB implementation of tm_msgs/SvrResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'tm_msgs/SvrResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '26fc8fa918b76675f2a40eb53a72721d' % The MD5 Checksum of the message definition
        PropertyList = { 'Header' 'Id' 'Mode' 'Content' 'ErrorCode' } % List of non-constant message properties
        ROSPropertyList = { 'header' 'id' 'mode' 'content' 'error_code' } % List of non-constant ROS message properties
        PropertyMessageTypes = { 'ros.msggen.std_msgs.Header' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        Header
        Id
        Mode
        Content
        ErrorCode
    end
    methods
        function set.Header(obj, val)
            validAttributes = {'nonempty', 'scalar'};
            validClasses = {'ros.msggen.std_msgs.Header'};
            validateattributes(val, validClasses, validAttributes, 'SvrResponse', 'Header')
            obj.Header = val;
        end
        function set.Id(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SvrResponse', 'Id');
            obj.Id = char(val);
        end
        function set.Mode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SvrResponse', 'Mode');
            obj.Mode = int8(val);
        end
        function set.Content(obj, val)
            val = convertStringsToChars(val);
            validClasses = {'char', 'string'};
            validAttributes = {};
            validateattributes(val, validClasses, validAttributes, 'SvrResponse', 'Content');
            obj.Content = char(val);
        end
        function set.ErrorCode(obj, val)
            validClasses = {'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'SvrResponse', 'ErrorCode');
            obj.ErrorCode = int8(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.tm_msgs.SvrResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.tm_msgs.SvrResponse(strObj);
        end
    end
end
